steps:
  - name: ':pipeline: clean'
    command: 'make clean'
    agents:
      queue: 'macos'

  - wait

  - name: ':pipeline: Bootstrap'
    command: 'make bootstrap'
    agents:
      queue: 'macos'

  - wait

  - name: ':pipeline: Test'
    command: 'make test'
    agents:
      queue: 'macos'

  - wait

  - name: ':pipeline: UI Test'
    command: 'make ui-test'
    agents:
      queue: 'macos'
    soft_fail:
      - exit_status: 2

  - wait

  - name: ':pipeline: Build UIKit Example'
    command: 'make build-uikit-example'
    agents:
      queue: 'macos'

  - wait

  - name: ':pipeline: Build SwiftUI Example'
    command: 'make build-swiftui-example'
    agents:
      queue: 'macos'

  - wait

  - name: ':pipeline: Build TinkLinkUI Example'
    command: 'make build-tinklinkui-example'
    agents:
      queue: 'macos'

  - wait

  - name: ':pipeline: Build Carthage Frameworks'
    command: 'make build-carthage-frameworks'
    env:
        "XCODE_XCCONFIG_FILE": "${BUILDKITE_BUILD_CHECKOUT_PATH}/carthage.xcconfig"
    agents:
      queue: 'macos'
    soft_fail:
      - exit_status: 1

  - wait

  - trigger: "distribute-tink-sdk-demo-ios"
    label: ":pipeline: Distribution"
    async: true
    if: build.env("BUILDKITE_MESSAGE") =~ /\[Demo app\]/
    build:
      message: "Triggered [Demo app] from TinkLink merge to master ${BUILDKITE_MESSAGE}"
      branch: "master"
